import{_ as t,c as a,a as s,o as n}from"./app-qwDAWgIM.js";const i={};function r(l,e){return n(),a("div",null,e[0]||(e[0]=[s(`<h2 id="🧾-一、常见的-git-回滚场景" tabindex="-1"><a class="header-anchor" href="#🧾-一、常见的-git-回滚场景"><span>🧾 一、常见的 Git 回滚场景</span></a></h2><h3 id="✅-1-撤销本地未提交的修改-working-directory" tabindex="-1"><a class="header-anchor" href="#✅-1-撤销本地未提交的修改-working-directory"><span>✅ 1. <strong>撤销本地未提交的修改（Working Directory）</strong></span></a></h3><p>如果你只是修改了代码但还没有 <code>git add</code> 或 <code>commit</code>，可以使用以下方式恢复到上一次提交的状态。</p><h4 id="在-idea-中操作" tabindex="-1"><a class="header-anchor" href="#在-idea-中操作"><span>在 IDEA 中操作：</span></a></h4><ul><li>打开 <strong>Version Control</strong> 工具窗口（View → Tool Windows → Git）</li><li>切换到 <strong>Local Changes</strong> 标签</li><li>右键点击要撤销更改的文件 → <strong>Revert</strong></li></ul><p>或者：</p><ul><li>打开某个修改过的文件 → 点击菜单栏的 <strong>Git → Revert...</strong></li></ul><hr><h3 id="✅-2-撤销已添加到暂存区-staging-area-的内容" tabindex="-1"><a class="header-anchor" href="#✅-2-撤销已添加到暂存区-staging-area-的内容"><span>✅ 2. <strong>撤销已添加到暂存区（Staging Area）的内容</strong></span></a></h3><p>如果你已经执行了 <code>git add</code>，但还没 <code>commit</code>，可以取消暂存。</p><h4 id="在-idea-中操作-1" tabindex="-1"><a class="header-anchor" href="#在-idea-中操作-1"><span>在 IDEA 中操作：</span></a></h4><ul><li>打开 <strong>Local Changes</strong> 窗口</li><li>在 <strong>Unstaged Changes</strong> 区域中找到你刚加进去的文件</li><li>右键选择 <strong>Changelist → Move to Another Changelist → Default Changelist</strong>（或者直接取消选中）</li></ul><p>也可以右键选择 <strong>Unstage</strong> 来取消暂存。</p><hr><h3 id="✅-3-撤销最近一次-commit-但保留修改内容" tabindex="-1"><a class="header-anchor" href="#✅-3-撤销最近一次-commit-但保留修改内容"><span>✅ 3. <strong>撤销最近一次 commit（但保留修改内容）</strong></span></a></h3><p>如果你想撤销最近的一次提交，但仍保留代码改动（方便重新提交），可以使用：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> reset <span class="token parameter variable">--soft</span> HEAD~1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="idea-操作" tabindex="-1"><a class="header-anchor" href="#idea-操作"><span>IDEA 操作：</span></a></h4><ul><li>打开 <strong>Git → Show History</strong></li><li>找到你想回退到的那个 commit</li><li>右键 → <strong>Reset Current Branch to Here</strong></li><li>选择 <code>Soft</code> 模式</li></ul><hr><h3 id="✅-4-彻底删除某次提交-不保留任何修改" tabindex="-1"><a class="header-anchor" href="#✅-4-彻底删除某次提交-不保留任何修改"><span>✅ 4. <strong>彻底删除某次提交（不保留任何修改）</strong></span></a></h3><p>如果你想完全删除某次提交以及它的所有改动：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD~1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>⚠️ 警告：这个操作会<strong>永久删除你的修改</strong>！</p><h4 id="idea-操作-1" tabindex="-1"><a class="header-anchor" href="#idea-操作-1"><span>IDEA 操作：</span></a></h4><ul><li>同样在 <strong>History</strong> 中右键 commit</li><li>选择 <code>Reset Current Branch to Here</code></li><li>选择 <code>Hard</code> 模式</li></ul><hr><h3 id="✅-5-回滚远程仓库的提交-慎用" tabindex="-1"><a class="header-anchor" href="#✅-5-回滚远程仓库的提交-慎用"><span>✅ 5. <strong>回滚远程仓库的提交（慎用！）</strong></span></a></h3><p>如果你已经 push 到远程仓库，并且想回滚，需要强制推送：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD~1</span>
<span class="line"><span class="token function">git</span> push <span class="token parameter variable">-f</span> origin main</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>⚠️ 注意：这会影响其他开发者，请务必确认后再操作！</p><hr><h2 id="🔁-总结表格" tabindex="-1"><a class="header-anchor" href="#🔁-总结表格"><span>🔁 总结表格</span></a></h2><table><thead><tr><th>场景</th><th>命令</th><th>IDEA 操作</th></tr></thead><tbody><tr><td>撤销未提交的修改</td><td>-</td><td>Local Changes → Revert</td></tr><tr><td>撤销已 add 的内容</td><td><code>git reset filename</code></td><td>Local Changes → Unstage</td></tr><tr><td>撤销 commit 保留修改</td><td><code>git reset --soft HEAD~1</code></td><td>History → Reset → Soft</td></tr><tr><td>撤销 commit 并删除修改</td><td><code>git reset --hard HEAD~1</code></td><td>History → Reset → Hard</td></tr><tr><td>推送到远程并回滚</td><td><code>git reset --hard HEAD~1 &amp;&amp; git push -f</code></td><td>同上 + Push with Force</td></tr></tbody></table><hr>`,35)]))}const o=t(i,[["render",r],["__file","githuigun.html.vue"]]),c=JSON.parse('{"path":"/blogs/gongzuo/git/githuigun.html","title":"git回滚","lang":"en-US","frontmatter":{"title":"git回滚","date":"2025/06/24","tags":["git"],"categories":["git"]},"headers":[{"level":2,"title":"🧾 一、常见的 Git 回滚场景","slug":"🧾-一、常见的-git-回滚场景","link":"#🧾-一、常见的-git-回滚场景","children":[{"level":3,"title":"✅ 1. 撤销本地未提交的修改（Working Directory）","slug":"✅-1-撤销本地未提交的修改-working-directory","link":"#✅-1-撤销本地未提交的修改-working-directory","children":[]},{"level":3,"title":"✅ 2. 撤销已添加到暂存区（Staging Area）的内容","slug":"✅-2-撤销已添加到暂存区-staging-area-的内容","link":"#✅-2-撤销已添加到暂存区-staging-area-的内容","children":[]},{"level":3,"title":"✅ 3. 撤销最近一次 commit（但保留修改内容）","slug":"✅-3-撤销最近一次-commit-但保留修改内容","link":"#✅-3-撤销最近一次-commit-但保留修改内容","children":[]},{"level":3,"title":"✅ 4. 彻底删除某次提交（不保留任何修改）","slug":"✅-4-彻底删除某次提交-不保留任何修改","link":"#✅-4-彻底删除某次提交-不保留任何修改","children":[]},{"level":3,"title":"✅ 5. 回滚远程仓库的提交（慎用！）","slug":"✅-5-回滚远程仓库的提交-慎用","link":"#✅-5-回滚远程仓库的提交-慎用","children":[]}]},{"level":2,"title":"🔁 总结表格","slug":"🔁-总结表格","link":"#🔁-总结表格","children":[]}],"git":{"createdTime":1742793305000,"updatedTime":1755076413000,"contributors":[{"name":"huangcheng","email":"2387020215@qq.com","commits":1}]},"filePathRelative":"blogs/工作/git/git回滚.md"}');export{o as comp,c as data};
