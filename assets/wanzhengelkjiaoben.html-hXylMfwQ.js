import{_ as n,c as a,a as e,o as t}from"./app-qwDAWgIM.js";const l={};function p(i,s){return t(),a("div",null,s[0]||(s[0]=[e(`<p>太好了！您希望使用 <strong>Docker</strong> 来启动 <strong>Logstash</strong>，并将应用的控制台日志（如 Spring Boot、Node.js 等）通过 Logstash 收集并写入 Elasticsearch。</p><p>下面我为您提供一个 <strong>完整、可运行的 Docker + Logstash + Elasticsearch + Kibana</strong> 集成方案，适用于生产或开发环境。</p><hr><h2 id="✅-目标" tabindex="-1"><a class="header-anchor" href="#✅-目标"><span>✅ 目标</span></a></h2><p>将应用的 <strong>控制台日志</strong> → <strong>Logstash（Docker）</strong> → <strong>Elasticsearch（Docker）</strong> → <strong>Kibana 可视化</strong></p><hr><h2 id="✅-整体架构" tabindex="-1"><a class="header-anchor" href="#✅-整体架构"><span>✅ 整体架构</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">[Your App]</span>
<span class="line">     ↓ (stdout)</span>
<span class="line">[Docker Container Log]</span>
<span class="line">     ↓</span>
<span class="line">[Filebeat 或直接 TCP/HTTP]</span>
<span class="line">     ↓</span>
<span class="line">[Logstash (Docker)] → 解析、过滤</span>
<span class="line">     ↓</span>
<span class="line">[Elasticsearch (Docker)] → 存储</span>
<span class="line">     ↓</span>
<span class="line">[Kibana (Docker)] → 可视化</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="✅-步骤-1-准备-docker-compose-yml" tabindex="-1"><a class="header-anchor" href="#✅-步骤-1-准备-docker-compose-yml"><span>✅ 步骤 1：准备 <code>docker-compose.yml</code></span></a></h2><p>创建一个 <code>docker-compose.yml</code> 文件，统一管理所有服务：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&quot;3.8&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">elasticsearch</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.elastic.co/elasticsearch/elasticsearch<span class="token punctuation">:</span>7.17.18</span>
<span class="line">    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> elasticsearch</span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> discovery.type=single<span class="token punctuation">-</span>node</span>
<span class="line">      <span class="token punctuation">-</span> xpack.security.enabled=false</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;ES_JAVA_OPTS=-Xms1g -Xmx1g&quot;</span></span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;9200:9200&quot;</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;9300:9300&quot;</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> esdata<span class="token punctuation">:</span>/usr/share/elasticsearch/data</span>
<span class="line">    <span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> elk</span>
<span class="line"></span>
<span class="line">  <span class="token key atrule">kibana</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.elastic.co/kibana/kibana<span class="token punctuation">:</span>7.17.18</span>
<span class="line">    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> kibana</span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> elasticsearch</span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> ELASTICSEARCH_HOSTS=http<span class="token punctuation">:</span>//elasticsearch<span class="token punctuation">:</span><span class="token number">9200</span></span>
<span class="line">      <span class="token punctuation">-</span> xpack.security.enabled=false</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;5601:5601&quot;</span></span>
<span class="line">    <span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> elk</span>
<span class="line"></span>
<span class="line">  <span class="token key atrule">logstash</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.elastic.co/logstash/logstash<span class="token punctuation">:</span>7.17.18</span>
<span class="line">    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> logstash</span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> elasticsearch</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;5000:5000/tcp&quot;</span> <span class="token comment"># 接收 JSON 日志（如 Logback TCP）</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;5044:5044&quot;</span> <span class="token comment"># 接收 Filebeat（推荐）</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> ./logstash.conf<span class="token punctuation">:</span>/usr/share/logstash/pipeline/logstash.conf</span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> xpack.monitoring.enabled=false</span>
<span class="line">    <span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> elk</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">esdata</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">elk</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">driver</span><span class="token punctuation">:</span> bridge</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="✅-步骤-2-创建-logstash-conf" tabindex="-1"><a class="header-anchor" href="#✅-步骤-2-创建-logstash-conf"><span>✅ 步骤 2：创建 <code>logstash.conf</code></span></a></h2><p>在 <code>docker-compose.yml</code> 同级目录创建 <code>logstash.conf</code>：</p><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line"># 输入：接收来自应用或 Filebeat 的日志</span>
<span class="line">input {</span>
<span class="line">  # 方式1：接收 Filebeat 发送的日志（推荐）</span>
<span class="line">  beats {</span>
<span class="line">    port =&gt; 5044</span>
<span class="line">  }</span>
<span class="line"></span>
<span class="line">  # 方式2：接收 TCP JSON 日志（如 Java 应用直接发）</span>
<span class="line">  # tcp {</span>
<span class="line">  #   port =&gt; 5000</span>
<span class="line">  #   codec =&gt; json</span>
<span class="line">  # }</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"># 过滤：解析、丰富、修改日志</span>
<span class="line">filter {</span>
<span class="line">  # 如果是 Java 异常堆栈，合并多行</span>
<span class="line">  if [message] =~ &quot;\\t&quot; {</span>
<span class="line">    multiline {</span>
<span class="line">      pattern =&gt; &quot;^\\t&quot;</span>
<span class="line">      what =&gt; &quot;previous&quot;</span>
<span class="line">    }</span>
<span class="line">  }</span>
<span class="line"></span>
<span class="line">  # 示例：添加自定义字段</span>
<span class="line">  mutate {</span>
<span class="line">    add_field =&gt; { &quot;app_name&quot; =&gt; &quot;my-java-app&quot; }</span>
<span class="line">    add_field =&gt; { &quot;env&quot; =&gt; &quot;production&quot; }</span>
<span class="line">  }</span>
<span class="line"></span>
<span class="line">  # 可选：使用 Grok 解析非结构化日志</span>
<span class="line">  # grok {</span>
<span class="line">  #   match =&gt; { &quot;message&quot; =&gt; &quot;%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{JAVACLASS:class} - %{GREEDYDATA:log_message}&quot; }</span>
<span class="line">  # }</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"># 输出：写入 Elasticsearch</span>
<span class="line">output {</span>
<span class="line">  elasticsearch {</span>
<span class="line">    hosts =&gt; &quot;http://elasticsearch:9200&quot;</span>
<span class="line">    index =&gt; &quot;app-logs-%{+YYYY.MM.dd}&quot;</span>
<span class="line">    # 可选：查看发送内容（调试用）</span>
<span class="line">    # stdout { codec =&gt; rubydebug }</span>
<span class="line">  }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="✅-步骤-3-启动-elk-栈" tabindex="-1"><a class="header-anchor" href="#✅-步骤-3-启动-elk-栈"><span>✅ 步骤 3：启动 ELK 栈</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>等待服务启动：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker-compose</span> logs <span class="token parameter variable">-f</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>看到 <code>Kibana is now available</code> 表示启动成功。</p><hr><h2 id="✅-步骤-4-发送日志到-logstash" tabindex="-1"><a class="header-anchor" href="#✅-步骤-4-发送日志到-logstash"><span>✅ 步骤 4：发送日志到 Logstash</span></a></h2><h3 id="✅-方式-a-使用-filebeat-推荐" tabindex="-1"><a class="header-anchor" href="#✅-方式-a-使用-filebeat-推荐"><span>✅ 方式 A：使用 Filebeat（推荐）</span></a></h3><h4 id="_1-安装-filebeat-在宿主机或另一个容器" tabindex="-1"><a class="header-anchor" href="#_1-安装-filebeat-在宿主机或另一个容器"><span>1. 安装 Filebeat（在宿主机或另一个容器）</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token parameter variable">-O</span> https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.17.18-linux-x86_64.tar.gz</span>
<span class="line"><span class="token function">tar</span> <span class="token parameter variable">-xzf</span> filebeat-7.17.18-linux-x86_64.tar.gz</span>
<span class="line"><span class="token builtin class-name">cd</span> filebeat-7.17.18-linux-x86_64</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-配置-filebeat-yml" tabindex="-1"><a class="header-anchor" href="#_2-配置-filebeat-yml"><span>2. 配置 <code>filebeat.yml</code></span></a></h4><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">filebeat.inputs</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> log</span>
<span class="line">    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">    <span class="token key atrule">paths</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> /path/to/your/app.log <span class="token comment"># 你的日志文件路径</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">output.logstash</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;localhost:5044&quot;</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-启动-filebeat" tabindex="-1"><a class="header-anchor" href="#_3-启动-filebeat"><span>3. 启动 Filebeat</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> ./filebeat <span class="token parameter variable">-e</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>✅ 日志会通过 5044 端口发送到 Logstash。</p></blockquote><hr><h3 id="✅-方式-b-java-应用直接发-tcp-结构化-json" tabindex="-1"><a class="header-anchor" href="#✅-方式-b-java-应用直接发-tcp-结构化-json"><span>✅ 方式 B：Java 应用直接发 TCP（结构化 JSON）</span></a></h3><h4 id="_1-添加依赖-spring-boot" tabindex="-1"><a class="header-anchor" href="#_1-添加依赖-spring-boot"><span>1. 添加依赖（Spring Boot）</span></a></h4><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>net.logstash.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logstash-logback-encoder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-配置-logback-spring-xml" tabindex="-1"><a class="header-anchor" href="#_2-配置-logback-spring-xml"><span>2. 配置 <code>logback-spring.xml</code></span></a></h4><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOGSTASH<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.appender.LogstashTcpSocketAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>destination</span><span class="token punctuation">&gt;</span></span>localhost:5000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>destination</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.encoder.LogstashEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>INFO<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOGSTASH<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>✅ 应用启动后，日志会以 JSON 格式发送到 <code>localhost:5000</code>，被 Logstash 接收。</p></blockquote><hr><h2 id="✅-步骤-5-在-kibana-查看日志" tabindex="-1"><a class="header-anchor" href="#✅-步骤-5-在-kibana-查看日志"><span>✅ 步骤 5：在 Kibana 查看日志</span></a></h2><ol><li>打开：<code>http://localhost:5601</code></li><li>进入 <strong>Stack Management &gt; Index Patterns</strong></li><li>创建索引模式：<code>app-logs-*</code></li><li>进入 <strong>Discover</strong>，选择该索引模式</li><li>✅ 您将看到结构化的日志数据！</li></ol><hr><h2 id="✅-验证-logstash-是否收到日志" tabindex="-1"><a class="header-anchor" href="#✅-验证-logstash-是否收到日志"><span>✅ 验证 Logstash 是否收到日志</span></a></h2><p>查看 Logstash 日志：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> logs <span class="token parameter variable">-f</span> logstash</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果看到类似：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Pipeline started successfully</span>
<span class="line">Received incoming event from beats</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>说明日志已成功接收。</p><hr><h2 id="✅-常见问题排查" tabindex="-1"><a class="header-anchor" href="#✅-常见问题排查"><span>✅ 常见问题排查</span></a></h2><table><thead><tr><th>问题</th><th>解决方案</th></tr></thead><tbody><tr><td>Logstash 启动失败</td><td>检查 <code>logstash.conf</code> 语法是否正确</td></tr><tr><td>无法连接 Elasticsearch</td><td>确保 <code>hosts =&gt; &quot;http://elasticsearch:9200&quot;</code>，使用容器名</td></tr><tr><td>Filebeat 发送失败</td><td>检查 <code>output.logstash.hosts</code> 是否为 <code>localhost:5044</code></td></tr><tr><td>日志未显示</td><td>检查索引是否存在：<code>GET _cat/indices?v</code></td></tr></tbody></table><hr><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Unable to load plugin. {:type=&gt;&quot;filter&quot;, :name=&gt;&quot;multiline&quot;}</span>
<span class="line">2025-08-13 17:55:16 [2025-08-13T09:55:16,168][ERROR][logstash.agent           ] Failed to execute action {:action=&gt;LogStash::PipelineAction::Create/pipeline_id:main, :exception=&gt;&quot;Java::JavaLang::IllegalStateException&quot;, :message=&gt;&quot;Unable to configure plugins: (PluginLoadingError) Couldn&#39;t find any filter plugin named &#39;multiline&#39;. Are you sure this is correct? Trying to load the multiline filter plugin resulted in this error: Unable to load the requested plugin named multiline of type filter. The plugin is not installed.&quot;, :backtrace=&gt;[&quot;org.logstash.config.ir.CompiledPipeline.&lt;init&gt;(CompiledPipeline.java:120)&quot;, &quot;org.logstash.execution.JavaBasePipelineExt.initialize(JavaBasePipelineExt.java:86)&quot;, &quot;org.logstash.execution.JavaBasePipelineExt$INVOKER$i$1$0$initialize.call(JavaBasePipelineExt$INVOKER$i$1$0$initialize.gen)&quot;, &quot;org.jruby.internal.runtime.methods.JavaMethod$JavaMethodN.call(JavaMethod.java:837)&quot;, &quot;org.jruby.ir.runtime.IRRuntimeHelpers.instanceSuper(IRRuntimeHelpers.java:1169)&quot;, &quot;org.jruby.ir.runtime.IRRuntimeHelpers.instanceSuperSplatArgs(IRRuntimeHelpers.java:1156)&quot;, &quot;org.jruby.ir.targets.InstanceSuperInvokeSite.invoke(InstanceSuperInvokeSite.java:39)&quot;, &quot;usr.share.logstash.logstash_minus_core.lib.logstash.java_pipeline.RUBY$method$initialize$0(/usr/share/logstash/logstash-core/lib/logstash/java_pipeline.rb:48)&quot;, &quot;org.jruby.internal.runtime.methods.CompiledIRMethod.call(CompiledIRMethod.java:80)&quot;, &quot;org.jruby.internal.runtime.methods.MixedModeIRMethod.call(MixedModeIRMethod.java:70)&quot;, &quot;org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:333)&quot;, &quot;org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:87)&quot;, &quot;org.jruby.RubyClass.newInstance(RubyClass.java:939)&quot;, &quot;org.jruby.RubyClass$INVOKER$i$newInstance.call(RubyClass$INVOKER$i$newInstance.gen)&quot;, &quot;org.jruby.ir.targets.InvokeSite.invoke(InvokeSite.java:207)&quot;, &quot;usr.share.logstash.logstash_minus_core.lib.logstash.pipeline_action.create.RUBY$method$execute$0(/usr/share/logstash/logstash-core/lib/logstash/pipeline_action/create.rb:52)&quot;, &quot;usr.share.logstash.logstash_minus_core.lib.logstash.pipeline_action.create.RUBY$method$execute$0$__VARARGS__(/usr/share/logstash/logstash-core/lib/logstash/pipeline_action/create.rb:50)&quot;, &quot;org.jruby.internal.runtime.methods.CompiledIRMethod.call(CompiledIRMethod.java:80)&quot;, &quot;org.jruby.internal.runtime.methods.MixedModeIRMethod.call(MixedModeIRMethod.java:70)&quot;, &quot;org.jruby.ir.targets.InvokeSite.invoke(InvokeSite.java:207)&quot;, &quot;usr.share.logstash.logstash_minus_core.lib.logstash.agent.RUBY$block$converge_state$2(/usr/share/logstash/logstash-core/lib/logstash/agent.rb:392)&quot;, &quot;org.jruby.runtime.CompiledIRBlockBody.callDirect(CompiledIRBlockBody.java:138)&quot;, &quot;org.jruby.runtime.IRBlockBody.call(IRBlockBody.java:58)&quot;, &quot;org.jruby.runtime.IRBlockBody.call(IRBlockBody.java:52)&quot;, &quot;org.jruby.runtime.Block.call(Block.java:139)&quot;, &quot;org.jruby.RubyProc.call(RubyProc.java:318)&quot;, &quot;org.jruby.internal.runtime.RubyRunnable.run(RubyRunnable.java:105)&quot;, &quot;java.base/java.lang.Thread.run(Thread.java:829)&quot;]}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>从错误信息来看，Logstash 在尝试加载 <code>multiline</code> 过滤器插件时遇到了问题。错误提示指出找不到名为 <code>multiline</code> 的过滤器插件。实际上，在 Logstash 中用于处理多行日志的插件名称应该是 <code>multiline</code> 插件，但它实际上是 <code>logstash-filter-multiline</code> 的一部分，且在较新版本中可能需要特别安装或者使用正确的配置。</p><p>不过，根据您的情况，似乎您使用的可能是旧版本的 Logstash 或者缺少了必要的插件安装步骤。这里提供一个解决方案来解决这个问题。</p><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h3><h4 id="_1-使用正确的插件名称" tabindex="-1"><a class="header-anchor" href="#_1-使用正确的插件名称"><span>1. 使用正确的插件名称</span></a></h4><p>首先确认是否确实需要 <code>multiline</code> 插件来合并多行日志。如果是的话，请确保以下几点：</p><ul><li>确认您正在使用的是支持 <code>multiline</code> 插件的 Logstash 版本。</li><li>如果是 Docker 部署，确保 Docker 镜像包含了所有必要的插件。</li></ul><p>对于您的情况，可能更推荐使用 <code>aggregate</code> 或者 <code>json</code> 这样的过滤器来处理日志，但针对多行日志（如 Java 异常堆栈），应该使用 <code>multiline</code> 插件的正确配置方式如下：</p><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line">input {</span>
<span class="line">  # 您的输入配置</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">filter {</span>
<span class="line">  if [type] == &quot;your-log-type&quot; {</span>
<span class="line">    multiline {</span>
<span class="line">      pattern =&gt; &quot;^\\t&quot; # 根据您的日志格式调整此正则表达式</span>
<span class="line">      what =&gt; &quot;previous&quot;</span>
<span class="line">      negate =&gt; true</span>
<span class="line">    }</span>
<span class="line">  }</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">output {</span>
<span class="line">  elasticsearch {</span>
<span class="line">    hosts =&gt; [&quot;http://elasticsearch:9200&quot;]</span>
<span class="line">    index =&gt; &quot;app-logs-%{+YYYY.MM.dd}&quot;</span>
<span class="line">  }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是，基于您的错误信息，看起来 Logstash 并没有找到 <code>multiline</code> 描述的插件。这通常是因为该插件未被包含在默认的 Logstash 安装包内。</p><h4 id="_2-安装缺失的插件" tabindex="-1"><a class="header-anchor" href="#_2-安装缺失的插件"><span>2. 安装缺失的插件</span></a></h4><p>如果确定是缺少插件的问题，您可以尝试手动安装 <code>logstash-filter-multiline</code> 插件。然而，在 Docker 环境下直接操作 Logstash 容器内的插件不是最佳实践。相反，可以创建一个自定义的 Dockerfile 来预安装所需的插件。</p><p>例如，创建一个新的 Dockerfile：</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">FROM</span> docker.elastic.co/logstash/logstash:7.17.18</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> logstash-plugin install logstash-filter-multiline</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后构建并使用这个自定义镜像：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> build <span class="token parameter variable">-t</span> my-logstash <span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>更新 <code>docker-compose.yml</code> 文件以使用新的镜像：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">logstash</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>logstash</span>
<span class="line">    <span class="token comment"># 其余配置...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-替代方案" tabindex="-1"><a class="header-anchor" href="#_3-替代方案"><span>3. 替代方案</span></a></h4><p>如果您只是需要处理多行日志，另一个方法是使用 Filebeat 的多行日志收集功能，这样就不需要在 Logstash 中处理多行日志了。Filebeat 支持非常灵活的多行日志合并策略。</p><p>例如，在 Filebeat 的配置文件中添加以下部分：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">filebeat.inputs</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> log</span>
<span class="line">    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">    <span class="token key atrule">paths</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> /path/to/your/logs/<span class="token important">*.log</span></span>
<span class="line">    <span class="token key atrule">multiline.pattern</span><span class="token punctuation">:</span> <span class="token string">&#39;^\\t&#39;</span> <span class="token comment"># 根据您的日志格式调整</span></span>
<span class="line">    <span class="token key atrule">multiline.negate</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="line">    <span class="token key atrule">multiline.match</span><span class="token punctuation">:</span> after</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种方法减少了 Logstash 的负担，并简化了整个 ELK 堆栈的日志处理流程。</p><hr><p>非常好的问题！</p><p>您提到目前是 <strong>“一行一行” 发送日志到 Logstash</strong>，觉得这样 <strong>网络开销大、效率低、浪费资源</strong> —— 您的直觉完全正确。</p><hr><h2 id="✅-目标-压缩日志传输" tabindex="-1"><a class="header-anchor" href="#✅-目标-压缩日志传输"><span>✅ 目标：压缩日志传输</span></a></h2><p>我们要实现：</p><blockquote><p><strong>减少网络请求次数、降低延迟、节省带宽、提升吞吐量</strong></p></blockquote><hr><h2 id="🚀-推荐方案-按优先级排序" tabindex="-1"><a class="header-anchor" href="#🚀-推荐方案-按优先级排序"><span>🚀 推荐方案（按优先级排序）</span></a></h2><hr><h3 id="✅-方案-1-使用-filebeat-bulk-批量发送-最推荐-生产首选" tabindex="-1"><a class="header-anchor" href="#✅-方案-1-使用-filebeat-bulk-批量发送-最推荐-生产首选"><span>✅ 方案 1：使用 <strong>Filebeat + Bulk 批量发送</strong>（最推荐！生产首选）</span></a></h3><p><strong>Filebeat</strong> 是 Elastic 官方轻量级采集器，天生支持：</p><ul><li>批量发送（Bulk API）</li><li>压缩（gzip）</li><li>背压控制</li><li>断点续传</li><li>多行日志合并</li></ul><h4 id="配置-filebeat-yml-启用压缩和批量" tabindex="-1"><a class="header-anchor" href="#配置-filebeat-yml-启用压缩和批量"><span>配置 <code>filebeat.yml</code> 启用压缩和批量：</span></a></h4><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">filebeat.inputs</span><span class="token punctuation">:</span></span>
<span class="line"><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> log</span>
<span class="line">  <span class="token key atrule">paths</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> /app/logs/<span class="token important">*.log</span></span>
<span class="line">  <span class="token key atrule">multiline.pattern</span><span class="token punctuation">:</span> <span class="token string">&#39;^\\[&#39;</span></span>
<span class="line">  <span class="token key atrule">multiline.negate</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">  <span class="token key atrule">multiline.match</span><span class="token punctuation">:</span> after</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">output.logstash</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;logstash:5044&quot;</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token comment"># 启用 gzip 压缩</span></span>
<span class="line">  <span class="token key atrule">compression_level</span><span class="token punctuation">:</span> <span class="token number">6</span>  <span class="token comment"># 0=不压缩, 6=中等, 9=最高</span></span>
<span class="line">  <span class="token comment"># 批量发送</span></span>
<span class="line">  <span class="token key atrule">bulk_max_size</span><span class="token punctuation">:</span> <span class="token number">2048</span>   <span class="token comment"># 每批最多 2048 条</span></span>
<span class="line">  <span class="token comment"># 发送间隔（即使不够一批也发）</span></span>
<span class="line">  <span class="token key atrule">worker</span><span class="token punctuation">:</span> <span class="token number">2</span></span>
<span class="line">  <span class="token key atrule">loadbalance</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 优化性能</span></span>
<span class="line"><span class="token key atrule">queue.mem</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">events</span><span class="token punctuation">:</span> <span class="token number">4096</span></span>
<span class="line">  <span class="token key atrule">flush.min_events</span><span class="token punctuation">:</span> <span class="token number">512</span></span>
<span class="line">  <span class="token key atrule">flush.timeout</span><span class="token punctuation">:</span> <span class="token string">&quot;5s&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>✅ 效果：<strong>多条日志打包 + 压缩后一次性发送，网络效率提升 5~10 倍</strong></p></blockquote><hr><h3 id="✅-方案-2-java-应用-→-kafka-→-logstash-高吞吐场景" tabindex="-1"><a class="header-anchor" href="#✅-方案-2-java-应用-→-kafka-→-logstash-高吞吐场景"><span>✅ 方案 2：Java 应用 → <strong>Kafka → Logstash</strong>（高吞吐场景）</span></a></h3><p>架构：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Java App → Kafka（批量+压缩） → Logstash → ES</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点：</span></a></h4><ul><li>Kafka 天然支持 <strong>批量发送、gzip/snappy 压缩、高吞吐、削峰填谷</strong></li><li>解耦日志生产与消费</li><li>支持重放、多消费者</li></ul><h4 id="java-配置-logback-kafka-appender" tabindex="-1"><a class="header-anchor" href="#java-配置-logback-kafka-appender"><span>Java 配置（Logback + Kafka Appender）：</span></a></h4><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>KAFKA<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.github.danielwegener.logback.kafka.KafkaAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>topic</span><span class="token punctuation">&gt;</span></span>logs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>topic</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keyingStrategy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...IntegerKeyingStrategy<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>deliveryStrategy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...AsynchronousDeliveryStrategy<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>producerConfig</span><span class="token punctuation">&gt;</span></span>bootstrap.servers=kafka:9092<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>producerConfig</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>producerConfig</span><span class="token punctuation">&gt;</span></span>compression.type=gzip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>producerConfig</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>producerConfig</span><span class="token punctuation">&gt;</span></span>batch.size=16384<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>producerConfig</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>producerConfig</span><span class="token punctuation">&gt;</span></span>linger.ms=20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>producerConfig</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.encoder.LogstashEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>✅ 适合日志量大（&gt;1000条/秒）的系统</p></blockquote><hr><h3 id="✅-方案-3-java-直连-logstash-→-启用-批量-压缩-有限支持" tabindex="-1"><a class="header-anchor" href="#✅-方案-3-java-直连-logstash-→-启用-批量-压缩-有限支持"><span>✅ 方案 3：Java 直连 Logstash → 启用 <strong>批量 + 压缩</strong>（有限支持）</span></a></h3><p><code>logstash-logback-encoder</code> 本身 <strong>不支持批量发送</strong>，但可以通过以下方式优化：</p><h4 id="方式-a-使用-loggingeventcompositejsonencoder-异步-appender" tabindex="-1"><a class="header-anchor" href="#方式-a-使用-loggingeventcompositejsonencoder-异步-appender"><span>方式 A：使用 <code>LoggingEventCompositeJsonEncoder</code> + 异步 Appender</span></a></h4><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOGSTASH<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.appender.LogstashTcpSocketAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>destination</span><span class="token punctuation">&gt;</span></span>host.docker.internal:5000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>destination</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">&lt;!-- 使用异步发送，减少阻塞 --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>eventDeliveryStrategy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.async.AwaitingEventDeliveryStrategy<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>providers</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timestamp</span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logLevel</span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>message</span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>loggerName</span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mdc</span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stackTrace</span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>providers</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!-- 包裹成异步 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ASYNC<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.AsyncAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOGSTASH<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>queueSize</span><span class="token punctuation">&gt;</span></span>2048<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>queueSize</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>discardingThreshold</span><span class="token punctuation">&gt;</span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>discardingThreshold</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includeCallerData</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includeCallerData</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>⚠️ 仍然是一条条发，但 <strong>异步发送不阻塞业务线程</strong></p></blockquote><hr><h3 id="✅-方案-4-自己实现-攒批发送-不推荐-复杂" tabindex="-1"><a class="header-anchor" href="#✅-方案-4-自己实现-攒批发送-不推荐-复杂"><span>✅ 方案 4：自己实现“攒批发送”（不推荐，复杂）</span></a></h3><p>不推荐手动实现“攒 100 条再发”，因为：</p><ul><li>容易丢日志（应用崩溃）</li><li>增加延迟</li><li>失去实时性</li><li>增加代码复杂度</li></ul><p>不如直接用 <strong>Filebeat 或 Kafka</strong></p><hr><h2 id="✅-如何验证是否-压缩-批量-成功" tabindex="-1"><a class="header-anchor" href="#✅-如何验证是否-压缩-批量-成功"><span>✅ 如何验证是否“压缩+批量”成功？</span></a></h2><h3 id="_1-查看网络流量" tabindex="-1"><a class="header-anchor" href="#_1-查看网络流量"><span>1. 查看网络流量</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> stats</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>对比开启压缩前后，<code>logstash</code> 和 <code>filebeat</code> 的网络 IO。</p><h3 id="_2-查看-logstash-日志" tabindex="-1"><a class="header-anchor" href="#_2-查看-logstash-日志"><span>2. 查看 Logstash 日志</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> logs <span class="token parameter variable">-f</span> logstash</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果看到：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Received 1024 events in batch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>说明是批量接收（Filebeat/Kafka 模式才有）。</p><h3 id="_3-抓包分析-高级" tabindex="-1"><a class="header-anchor" href="#_3-抓包分析-高级"><span>3. 抓包分析（高级）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">tcpdump <span class="token parameter variable">-i</span> any <span class="token parameter variable">-s</span> <span class="token number">0</span> <span class="token parameter variable">-w</span> logs.pcap port <span class="token number">5044</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>用 Wireshark 打开，看每个 TCP 包是否包含多条日志。</p><hr><h2 id="✅-最终推荐架构-生产级" tabindex="-1"><a class="header-anchor" href="#✅-最终推荐架构-生产级"><span>✅ 最终推荐架构（生产级）</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token punctuation">[</span>Java App<span class="token punctuation">]</span></span>
<span class="line">     ↓ <span class="token punctuation">(</span>写文件<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">[</span>app.log<span class="token punctuation">]</span></span>
<span class="line">     ↓</span>
<span class="line"><span class="token punctuation">[</span>Filebeat<span class="token punctuation">]</span> → 压缩 + 批量 + 多行合并</span>
<span class="line">     ↓ <span class="token punctuation">(</span><span class="token number">5044</span>, beats<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">[</span>Logstash<span class="token punctuation">]</span> → 解析 + 过滤</span>
<span class="line">     ↓</span>
<span class="line"><span class="token punctuation">[</span>Elasticsearch<span class="token punctuation">]</span></span>
<span class="line">     ↓</span>
<span class="line"><span class="token punctuation">[</span>Kibana<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="优势" tabindex="-1"><a class="header-anchor" href="#优势"><span>优势：</span></a></h3><table><thead><tr><th>特性</th><th>支持</th></tr></thead><tbody><tr><td>✅ 批量发送</td><td>✔️</td></tr><tr><td>✅ Gzip 压缩</td><td>✔️</td></tr><tr><td>✅ 多行日志</td><td>✔️</td></tr><tr><td>✅ 断点续传</td><td>✔️</td></tr><tr><td>✅ 低延迟</td><td>✔️</td></tr><tr><td>✅ 高吞吐</td><td>✔️</td></tr></tbody></table><hr><h2 id="✅-总结" tabindex="-1"><a class="header-anchor" href="#✅-总结"><span>✅ 总结</span></a></h2><table><thead><tr><th>方案</th><th>是否压缩</th><th>是否批量</th><th>推荐度</th></tr></thead><tbody><tr><td>Filebeat + Logstash</td><td>✅ gzip</td><td>✅ 批量</td><td>⭐⭐⭐⭐⭐</td></tr><tr><td>Kafka + Logstash</td><td>✅ gzip/snappy</td><td>✅ 批量</td><td>⭐⭐⭐⭐☆（高吞吐）</td></tr><tr><td>Java 直连 Logstash</td><td>❌</td><td>❌（一条条发）</td><td>⭐⭐☆</td></tr><tr><td>自己攒批</td><td>❌/✅（复杂）</td><td>✅</td><td>⭐（不推荐）</td></tr></tbody></table><hr><p>🔧 <strong>立即行动建议</strong>：</p><ol><li>停掉 Java 直连 Logstash</li><li>改为：Java 写文件 → Filebeat 采集 → Logstash</li><li>在 <code>filebeat.yml</code> 中启用 <code>compression_level: 6</code> 和 <code>bulk_max_size: 2048</code></li></ol><p>您会立刻看到 <strong>网络流量下降 60%~80%</strong>，系统更稳定。</p>`,137)]))}const o=n(l,[["render",p],["__file","wanzhengelkjiaoben.html.vue"]]),u=JSON.parse('{"path":"/blogs/gongzuo/elk/wanzhengelkjiaoben.html","title":"完整elk脚本","lang":"en-US","frontmatter":{"title":"完整elk脚本","date":"2025/08/31","tags":["elk"],"categories":["elk"]},"headers":[{"level":2,"title":"✅ 目标","slug":"✅-目标","link":"#✅-目标","children":[]},{"level":2,"title":"✅ 整体架构","slug":"✅-整体架构","link":"#✅-整体架构","children":[]},{"level":2,"title":"✅ 步骤 1：准备 docker-compose.yml","slug":"✅-步骤-1-准备-docker-compose-yml","link":"#✅-步骤-1-准备-docker-compose-yml","children":[]},{"level":2,"title":"✅ 步骤 2：创建 logstash.conf","slug":"✅-步骤-2-创建-logstash-conf","link":"#✅-步骤-2-创建-logstash-conf","children":[]},{"level":2,"title":"✅ 步骤 3：启动 ELK 栈","slug":"✅-步骤-3-启动-elk-栈","link":"#✅-步骤-3-启动-elk-栈","children":[]},{"level":2,"title":"✅ 步骤 4：发送日志到 Logstash","slug":"✅-步骤-4-发送日志到-logstash","link":"#✅-步骤-4-发送日志到-logstash","children":[{"level":3,"title":"✅ 方式 A：使用 Filebeat（推荐）","slug":"✅-方式-a-使用-filebeat-推荐","link":"#✅-方式-a-使用-filebeat-推荐","children":[]},{"level":3,"title":"✅ 方式 B：Java 应用直接发 TCP（结构化 JSON）","slug":"✅-方式-b-java-应用直接发-tcp-结构化-json","link":"#✅-方式-b-java-应用直接发-tcp-结构化-json","children":[]}]},{"level":2,"title":"✅ 步骤 5：在 Kibana 查看日志","slug":"✅-步骤-5-在-kibana-查看日志","link":"#✅-步骤-5-在-kibana-查看日志","children":[]},{"level":2,"title":"✅ 验证 Logstash 是否收到日志","slug":"✅-验证-logstash-是否收到日志","link":"#✅-验证-logstash-是否收到日志","children":[]},{"level":2,"title":"✅ 常见问题排查","slug":"✅-常见问题排查","link":"#✅-常见问题排查","children":[{"level":3,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}]},{"level":2,"title":"✅ 目标：压缩日志传输","slug":"✅-目标-压缩日志传输","link":"#✅-目标-压缩日志传输","children":[]},{"level":2,"title":"🚀 推荐方案（按优先级排序）","slug":"🚀-推荐方案-按优先级排序","link":"#🚀-推荐方案-按优先级排序","children":[{"level":3,"title":"✅ 方案 1：使用 Filebeat + Bulk 批量发送（最推荐！生产首选）","slug":"✅-方案-1-使用-filebeat-bulk-批量发送-最推荐-生产首选","link":"#✅-方案-1-使用-filebeat-bulk-批量发送-最推荐-生产首选","children":[]},{"level":3,"title":"✅ 方案 2：Java 应用 → Kafka → Logstash（高吞吐场景）","slug":"✅-方案-2-java-应用-→-kafka-→-logstash-高吞吐场景","link":"#✅-方案-2-java-应用-→-kafka-→-logstash-高吞吐场景","children":[]},{"level":3,"title":"✅ 方案 3：Java 直连 Logstash → 启用 批量 + 压缩（有限支持）","slug":"✅-方案-3-java-直连-logstash-→-启用-批量-压缩-有限支持","link":"#✅-方案-3-java-直连-logstash-→-启用-批量-压缩-有限支持","children":[]},{"level":3,"title":"✅ 方案 4：自己实现“攒批发送”（不推荐，复杂）","slug":"✅-方案-4-自己实现-攒批发送-不推荐-复杂","link":"#✅-方案-4-自己实现-攒批发送-不推荐-复杂","children":[]}]},{"level":2,"title":"✅ 如何验证是否“压缩+批量”成功？","slug":"✅-如何验证是否-压缩-批量-成功","link":"#✅-如何验证是否-压缩-批量-成功","children":[{"level":3,"title":"1. 查看网络流量","slug":"_1-查看网络流量","link":"#_1-查看网络流量","children":[]},{"level":3,"title":"2. 查看 Logstash 日志","slug":"_2-查看-logstash-日志","link":"#_2-查看-logstash-日志","children":[]},{"level":3,"title":"3. 抓包分析（高级）","slug":"_3-抓包分析-高级","link":"#_3-抓包分析-高级","children":[]}]},{"level":2,"title":"✅ 最终推荐架构（生产级）","slug":"✅-最终推荐架构-生产级","link":"#✅-最终推荐架构-生产级","children":[{"level":3,"title":"优势：","slug":"优势","link":"#优势","children":[]}]},{"level":2,"title":"✅ 总结","slug":"✅-总结","link":"#✅-总结","children":[]}],"git":{"createdTime":1755080218000,"updatedTime":1755082298000,"contributors":[{"name":"huangcheng","email":"2387020215@qq.com","commits":2}]},"filePathRelative":"blogs/工作/elk/完整elk脚本.md"}');export{o as comp,u as data};
