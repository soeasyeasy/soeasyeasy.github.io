import{_ as s,c as n,a as e,o as t}from"./app-qwDAWgIM.js";const l={};function i(c,a){return t(),n("div",null,a[0]||(a[0]=[e(`<p>在 ELK 这个术语中，&quot;L&quot; 代表 <strong>Logstash</strong>。ELK 是一个流行的开源日志管理平台的缩写，它由三个主要组件组成：</p><ol><li><strong>Elasticsearch</strong>：用于存储、搜索和分析日志数据及其他数据的分布式搜索引擎。</li><li><strong>Logstash</strong>：&quot;L&quot; 所指的部分，是一个服务器端的数据处理管道，能够同时从多个来源采集数据，进行转换，然后将数据发送到你选择的“存储库”中，如 Elasticsearch。</li><li><strong>Kibana</strong>：提供了一个可视化的界面，用于浏览、搜索、分析和展示存储在 Elasticsearch 中的数据。</li></ol><h3 id="logstash-的主要功能" tabindex="-1"><a class="header-anchor" href="#logstash-的主要功能"><span>Logstash 的主要功能</span></a></h3><ul><li><strong>数据收集</strong>：可以从各种数据源（如日志文件、系统指标、网络流等）采集数据。</li><li><strong>数据处理</strong>：通过丰富的过滤器插件对输入的数据进行解析、格式化、修改或增强。例如，可以使用 Grok 解析非结构化日志数据并使其结构化。</li><li><strong>数据输出</strong>：可以将处理后的数据发送到不同的目的地，最常见的是 Elasticsearch，但也可以配置为其他输出目标，如文件、电子邮件、数据库等。</li></ul><h3 id="logstash-工作流程" tabindex="-1"><a class="header-anchor" href="#logstash-工作流程"><span>Logstash 工作流程</span></a></h3><ol><li><strong>Inputs（输入）</strong>：定义如何从不同源头采集数据。支持多种输入插件，包括文件、syslog、beats 等。</li><li><strong>Filters（过滤器）</strong>：用于处理和解析输入的数据。例如，你可以使用过滤器来解析日志行，添加地理信息，移除敏感数据等。</li><li><strong>Outputs（输出）</strong>：指定处理完的数据应该发送到哪里。最常见的输出是 Elasticsearch，但也可以是其他形式，比如发送警报到电子邮件或保存到文件系统中。</li></ol><h3 id="示例场景" tabindex="-1"><a class="header-anchor" href="#示例场景"><span>示例场景</span></a></h3><p>假设你有一个 Web 应用程序，它生成大量的访问日志。你可以配置 Logstash 来读取这些日志文件（Input），使用 Grok 过滤器解析每一行日志以提取有用的信息（Filter），然后将解析后的数据发送到 Elasticsearch（Output）。之后，使用 Kibana 可以创建仪表板来可视化这些日志数据，帮助你更好地理解应用的行为和性能。</p><h3 id="替代方案" tabindex="-1"><a class="header-anchor" href="#替代方案"><span>替代方案</span></a></h3><p>值得注意的是，在一些场景下，用户可能会选择不使用 Logstash，而是使用更轻量级的解决方案，如 <strong>Filebeat</strong> 或者 <strong>Metricbeat</strong>，它们属于 Elastic 的 Beats 系列。Beats 能够直接向 Elasticsearch 发送数据，并且与 Logstash 结合使用时也能减少资源消耗。这种情况下，架构可能被称为 <strong>EFK</strong>（Elasticsearch, Filebeat/Kibana）。不过，当需要复杂的数据处理逻辑时，Logstash 仍然是不可或缺的选择。</p><p><code>spring-data-elasticsearch:5.0.7</code> 是 Spring Data Elasticsearch 的一个版本，它基于 <strong>Elasticsearch 7.17.x</strong> 客户端。</p><hr><h3 id="✅-对应关系-spring-data-elasticsearch-5-0-x-→-elasticsearch-7-17-x" tabindex="-1"><a class="header-anchor" href="#✅-对应关系-spring-data-elasticsearch-5-0-x-→-elasticsearch-7-17-x"><span>✅ 对应关系：Spring Data Elasticsearch 5.0.x → Elasticsearch 7.17.x</span></a></h3><table><thead><tr><th>组件</th><th>版本</th></tr></thead><tbody><tr><td><strong>Spring Data Elasticsearch</strong></td><td><code>5.0.7</code></td></tr><tr><td><strong>底层 Elasticsearch Java Client</strong></td><td><strong>7.17.x</strong>（Transport Client / RestHighLevelClient）</td></tr><tr><td><strong>兼容的 Elasticsearch 服务端版本</strong></td><td><strong>7.17.x</strong></td></tr></tbody></table><blockquote><p>⚠️ 注意：Spring Data Elasticsearch 5.x <strong>不使用</strong>新的 <code>co.elastic.clients:elasticsearch-java</code>（即 8.x 的 Java API Client），而是基于旧的 <strong><code>org.elasticsearch.client:rest-high-level-client</code></strong>（7.17.x）。</p></blockquote><hr><h3 id="🐳-docker-镜像推荐" tabindex="-1"><a class="header-anchor" href="#🐳-docker-镜像推荐"><span>🐳 Docker 镜像推荐</span></a></h3><p>因此，您应该使用 <strong>Elasticsearch 7.17.x</strong> 的 Docker 镜像，例如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--name</span> elasticsearch <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">9200</span>:9200 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">9300</span>:9300 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;discovery.type=single-node&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;xpack.security.enabled=false&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  docker.elastic.co/elasticsearch/elasticsearch:7.17.18</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>✅ 推荐版本：<code>7.17.18</code>（7.x 最终版本，稳定、安全补丁更新）</p><hr><h3 id="🔗-版本对应表-spring-data-elasticsearch-→-elasticsearch" tabindex="-1"><a class="header-anchor" href="#🔗-版本对应表-spring-data-elasticsearch-→-elasticsearch"><span>🔗 版本对应表（Spring Data Elasticsearch → Elasticsearch）</span></a></h3><table><thead><tr><th>Spring Data Elasticsearch</th><th>Spring Boot</th><th>Elasticsearch 服务端</th><th>客户端类型</th></tr></thead><tbody><tr><td>5.0.x (如 5.0.7)</td><td>3.0.x</td><td>7.17.x</td><td><code>RestHighLevelClient</code></td></tr><tr><td>5.1.x</td><td>3.1.x</td><td>7.17.x / 8.7+（有限支持）</td><td>混合</td></tr><tr><td>6.0+</td><td>3.2+</td><td>8.9+</td><td><code>java-api-client</code> (<code>co.elastic.clients</code>)</td></tr></tbody></table><blockquote><p>📌 <code>spring-data-elasticsearch:5.0.7</code> 发布于 2023 年初，是 Spring Data 2022.0.x 版本的一部分，对应 Spring Boot 3.0.x。</p></blockquote><hr><h3 id="✅-总结" tabindex="-1"><a class="header-anchor" href="#✅-总结"><span>✅ 总结</span></a></h3><ul><li>✅ <strong>Docker 镜像版本</strong>：<code>elasticsearch:7.17.18</code></li><li>✅ <strong>Maven 依赖</strong>：<div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-data-elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.0.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>✅ <strong>客户端类型</strong>：<code>RestHighLevelClient</code>（已弃用，但在 7.17 中仍可用）</li><li>✅ <strong>连接方式</strong>：HTTP + Transport（9300 端口在 7.x 中仍可用，但推荐用 REST）</li></ul><hr><h3 id="🛑-不要使用-elasticsearch-8-x-的-docker-镜像" tabindex="-1"><a class="header-anchor" href="#🛑-不要使用-elasticsearch-8-x-的-docker-镜像"><span>🛑 不要使用 Elasticsearch 8.x 的 Docker 镜像</span></a></h3><p>如 <code>8.0</code>, <code>8.1</code>, <code>8.13</code> 等，虽然 <strong>7.17 客户端可以连接 8.x 服务端</strong>（向后兼容），但：</p><ul><li>8.x 默认启用安全（用户名/密码）</li><li>某些 API 行为变化（如默认分页大小）</li><li>可能触发弃用警告或兼容性问题</li></ul><p>所以，<strong>最稳妥的是使用 <code>7.17.18</code></strong>。</p><hr><p>✅ <strong>最终推荐 Docker 命令</strong>：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--name</span> es717 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">9200</span>:9200 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">9300</span>:9300 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;discovery.type=single-node&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;xpack.security.enabled=false&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  docker.elastic.co/elasticsearch/elasticsearch:7.17.18</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="✅-1-什么是-kibana" tabindex="-1"><a class="header-anchor" href="#✅-1-什么是-kibana"><span>✅ 1. 什么是 Kibana？</span></a></h2><p>Kibana 是 Elasticsearch 的可视化界面，用于：</p><ul><li>查询数据（Dev Tools）</li><li>创建仪表盘（Dashboard）</li><li>监控集群状态</li><li>管理索引（Index Patterns, Index Management）</li></ul><hr><h2 id="✅-2-安装-kibana-docker-方式-推荐" tabindex="-1"><a class="header-anchor" href="#✅-2-安装-kibana-docker-方式-推荐"><span>✅ 2. 安装 Kibana（Docker 方式，推荐）</span></a></h2><p>您已经运行了 Elasticsearch 7.17.18，现在添加 Kibana：</p><h3 id="🐳-启动-kibana-容器" tabindex="-1"><a class="header-anchor" href="#🐳-启动-kibana-容器"><span>🐳 启动 Kibana 容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--name</span> kibana <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">5601</span>:5601 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--network</span> <span class="token function">host</span> <span class="token punctuation">\\</span>  <span class="token comment"># 或使用 --link 与 es 容器通信</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;ELASTICSEARCH_HOSTS=http://localhost:9200&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;XPACK_SECURITY_ENABLED=false&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  docker.elastic.co/kibana/kibana:7.17.18</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>⚠️ 如果 Elasticsearch 不在 <code>localhost</code>，请将 <code>ELASTICSEARCH_HOSTS</code> 改为实际地址，如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token parameter variable">-e</span> <span class="token string">&quot;ELASTICSEARCH_HOSTS=http://192.168.1.100:9200&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><hr><h2 id="✅-3-访问-kibana" tabindex="-1"><a class="header-anchor" href="#✅-3-访问-kibana"><span>✅ 3. 访问 Kibana</span></a></h2><p>打开浏览器访问：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">http://localhost:5601</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>您将看到 Kibana 首页。</p><blockquote><p>📌 由于您禁用了安全功能（<code>xpack.security.enabled=false</code>），无需登录即可使用。</p></blockquote><hr><h2 id="✅-4-常用功能入口" tabindex="-1"><a class="header-anchor" href="#✅-4-常用功能入口"><span>✅ 4. 常用功能入口</span></a></h2><table><thead><tr><th>功能</th><th>路径</th><th></th></tr></thead><tbody><tr><td><strong>Dev Tools（控制台）</strong></td><td><code>http://localhost:5601/app/dev_tools</code></td><td>用于执行 REST API 查询</td></tr><tr><td><strong>Discover</strong></td><td>主页</td><td>查看文档、创建 Index Pattern</td></tr><tr><td><strong>Stack Management</strong></td><td>左侧菜单</td><td>管理索引、标签、脚本等</td></tr></tbody></table><hr><h2 id="✅-5-示例-在-dev-tools-中测试-ids-查询" tabindex="-1"><a class="header-anchor" href="#✅-5-示例-在-dev-tools-中测试-ids-查询"><span>✅ 5. 示例：在 Dev Tools 中测试 IDs 查询</span></a></h2><p>进入 <strong>Dev Tools</strong>，输入：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line">GET /your_index_name/_search</span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;ids&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;values&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>替换 <code>your_index_name</code> 为您的实际索引名。</p><hr><h2 id="✅-6-与-spring-data-elasticsearch-配合使用" tabindex="-1"><a class="header-anchor" href="#✅-6-与-spring-data-elasticsearch-配合使用"><span>✅ 6. 与 Spring Data Elasticsearch 配合使用</span></a></h2><ul><li>Kibana 用于 <strong>调试、查看数据、验证映射（mapping）</strong></li><li>Spring 应用负责业务逻辑</li><li>两者连接同一个 Elasticsearch 实例</li></ul><hr><h2 id="✅-7-注意事项" tabindex="-1"><a class="header-anchor" href="#✅-7-注意事项"><span>✅ 7. 注意事项</span></a></h2><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td><strong>版本匹配</strong></td><td>Kibana 版本必须与 Elasticsearch <strong>主版本一致</strong>（都是 7.17.x）</td></tr><tr><td><strong>内存</strong></td><td>Kibana 至少需要 1GB 内存，建议 Docker 分配 2GB</td></tr><tr><td><strong>网络</strong></td><td>确保 Kibana 能访问 Elasticsearch 的 <code>9200</code> 端口</td></tr><tr><td><strong>生产环境</strong></td><td>建议启用 <code>xpack.security.enabled=true</code> 并设置密码</td></tr></tbody></table><hr><h2 id="✅-8-停止-删除容器" tabindex="-1"><a class="header-anchor" href="#✅-8-停止-删除容器"><span>✅ 8. 停止/删除容器</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 停止</span></span>
<span class="line"><span class="token function">docker</span> stop kibana</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">rm</span> kibana</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><blockquote><p><strong>在 Windows 上使用 Docker Desktop 启动了 Elasticsearch 和 Kibana，Kibana 能否通过 <code>http://localhost:9200</code> 连接 Elasticsearch？</strong></p></blockquote><hr><h3 id="✅-简短回答" tabindex="-1"><a class="header-anchor" href="#✅-简短回答"><span>✅ 简短回答：</span></a></h3><p><strong>可以！在绝大多数情况下，Kibana 容器内使用 <code>http://localhost:9200</code> 是能正常连接到 Elasticsearch 的——但前提是：您使用的是 <code>host</code> 网络模式，或者正确配置了容器间通信。</strong></p><p>但默认情况下，<strong>Docker 容器的 <code>localhost</code> 不等于宿主机的 <code>localhost</code></strong>，所以需要特别注意网络配置。</p><hr><h2 id="🧩-问题本质-容器网络隔离" tabindex="-1"><a class="header-anchor" href="#🧩-问题本质-容器网络隔离"><span>🧩 问题本质：容器网络隔离</span></a></h2><ul><li>您在 Windows 上运行 Docker。</li><li>Elasticsearch 容器监听 <code>0.0.0.0:9200</code>，并通过 <code>-p 9200:9200</code> 映射到 Windows 主机。</li><li>Kibana 容器运行在自己的网络环境中。</li><li>Kibana 容器内的 <code>localhost</code> 指的是 <strong>它自己</strong>，而不是宿主机或 Elasticsearch 容器。</li></ul><p>所以，如果 Kibana 配置为：</p><div class="language-env line-numbers-mode" data-highlighter="prismjs" data-ext="env" data-title="env"><pre><code><span class="line">ELASTICSEARCH_HOSTS=http://localhost:9200</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>它会去访问 <strong>自己容器内部的 9200 端口</strong>，而那里没有 Elasticsearch，导致连接失败。</p><hr><h2 id="✅-正确解决方案" tabindex="-1"><a class="header-anchor" href="#✅-正确解决方案"><span>✅ 正确解决方案</span></a></h2><h3 id="✅-方案-1-使用-docker-自定义网络-推荐-✅" tabindex="-1"><a class="header-anchor" href="#✅-方案-1-使用-docker-自定义网络-推荐-✅"><span>✅ 方案 1：使用 Docker 自定义网络（推荐 ✅）</span></a></h3><p>这是最标准、最可靠的方式。</p><h4 id="_1-创建自定义网络" tabindex="-1"><a class="header-anchor" href="#_1-创建自定义网络"><span>1. 创建自定义网络</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> network create es-net</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-启动-elasticsearch-并加入网络" tabindex="-1"><a class="header-anchor" href="#_2-启动-elasticsearch-并加入网络"><span>2. 启动 Elasticsearch 并加入网络</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--name</span> elasticsearch <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--network</span> es-net <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">9200</span>:9200 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">9300</span>:9300 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;discovery.type=single-node&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;xpack.security.enabled=false&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  docker.elastic.co/elasticsearch/elasticsearch:7.17.18</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-启动-kibana-并加入同一网络" tabindex="-1"><a class="header-anchor" href="#_3-启动-kibana-并加入同一网络"><span>3. 启动 Kibana 并加入同一网络</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--name</span> kibana <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--network</span> es-net <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">5601</span>:5601 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;ELASTICSEARCH_HOSTS=http://elasticsearch:9200&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;XPACK_SECURITY_ENABLED=false&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  docker.elastic.co/kibana/kibana:7.17.18</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>🔥 关键点：</p><ul><li><code>--network es-net</code>：两个容器在同一个网络</li><li><code>http://elasticsearch:9200</code>：使用容器名称作为主机名，Docker 会自动解析</li></ul></blockquote><p>✅ 这种方式在 Windows、Mac、Linux 上都适用。</p><hr><h3 id="✅-方案-2-使用-host-docker-internal-windows-mac-专用" tabindex="-1"><a class="header-anchor" href="#✅-方案-2-使用-host-docker-internal-windows-mac-专用"><span>✅ 方案 2：使用 <code>host.docker.internal</code>（Windows/Mac 专用）</span></a></h3><p>Docker Desktop 为 Windows 和 Mac 提供了一个特殊主机名：</p><blockquote><p><code>host.docker.internal</code></p></blockquote><p>它指向 <strong>宿主机（Windows）本身</strong>。</p><h4 id="启动-kibana-时使用" tabindex="-1"><a class="header-anchor" href="#启动-kibana-时使用"><span>启动 Kibana 时使用：</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--name</span> kibana <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">5601</span>:5601 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;ELASTICSEARCH_HOSTS=http://host.docker.internal:9200&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token string">&quot;XPACK_SECURITY_ENABLED=false&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  docker.elastic.co/kibana/kibana:7.17.18</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样 Kibana 容器就能通过 <code>host.docker.internal:9200</code> 访问宿主机上的 Elasticsearch。</p><p>✅ 适用于：</p><ul><li>Elasticsearch 运行在 Windows 本机（非容器）</li><li>或 Elasticsearch 容器已通过 <code>-p 9200:9200</code> 暴露端口</li></ul><hr><h3 id="❌-方案-3-network-host-windows-不支持" tabindex="-1"><a class="header-anchor" href="#❌-方案-3-network-host-windows-不支持"><span>❌ 方案 3：<code>--network host</code>（Windows 不支持）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token parameter variable">--network</span> <span class="token function">host</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这种方式可以让容器共享宿主机网络，<code>localhost</code> 直接生效。</p><p>⚠️ <strong>但在 Windows 上的 Docker Desktop 中，<code>--network host</code> 不支持！</strong></p><p>所以这个方案 <strong>不可用</strong>。</p><hr><h2 id="✅-总结-windows-上推荐做法" tabindex="-1"><a class="header-anchor" href="#✅-总结-windows-上推荐做法"><span>✅ 总结：Windows 上推荐做法</span></a></h2><table><thead><tr><th>场景</th><th>推荐方案</th></tr></thead><tbody><tr><td>✅ <strong>Elasticsearch 和 Kibana 都用 Docker</strong></td><td><strong>使用 <code>docker network</code> + 容器名称（如 <code>http://elasticsearch:9200</code>）</strong></td></tr><tr><td>✅ <strong>Elasticsearch 在 Windows 本机运行（非 Docker）</strong></td><td>使用 <code>http://host.docker.internal:9200</code></td></tr><tr><td>✅ <strong>两个都用 Docker，但不想建网络</strong></td><td>确保 ES 暴露端口，Kibana 用 <code>http://host.docker.internal:9200</code></td></tr></tbody></table><hr><h2 id="✅-验证方法" tabindex="-1"><a class="header-anchor" href="#✅-验证方法"><span>✅ 验证方法</span></a></h2><p>进入 Kibana 容器测试连接：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> kibana <span class="token function">bash</span></span>
<span class="line"><span class="token function">curl</span> http://elasticsearch:9200  <span class="token comment"># 或 host.docker.internal:9200</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果返回 Elasticsearch 的 JSON 信息，说明连接成功。</p><hr><h2 id="✅-最终建议" tabindex="-1"><a class="header-anchor" href="#✅-最终建议"><span>✅ 最终建议</span></a></h2><p>使用 <strong>自定义网络 + 容器名称</strong>，这是最标准、跨平台、可扩展的方式。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 1. 创建网络</span></span>
<span class="line"><span class="token function">docker</span> network create es-net</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 启动 ES</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> es <span class="token parameter variable">--network</span> es-net <span class="token parameter variable">-p</span> <span class="token number">9200</span>:9200 <span class="token parameter variable">-e</span> <span class="token string">&quot;discovery.type=single-node&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;xpack.security.enabled=false&quot;</span> elasticsearch:7.17.18</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 启动 Kibana</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> kibana <span class="token parameter variable">--network</span> es-net <span class="token parameter variable">-p</span> <span class="token number">5601</span>:5601 <span class="token parameter variable">-e</span> <span class="token string">&quot;ELASTICSEARCH_HOSTS=http://es:9200&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;XPACK_SECURITY_ENABLED=false&quot;</span> kibana:7.17.18</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>✅ 完美运行，无网络问题。</p><hr>`,122)]))}const p=s(l,[["render",i],["__file","elk windowxiadockerbushu.html.vue"]]),o=JSON.parse('{"path":"/blogs/gongzuo/elk/elk windowxiadockerbushu.html","title":"elk window下docker部署","lang":"en-US","frontmatter":{"title":"elk window下docker部署","date":"2025/08/31","tags":["elk"],"categories":["elk"]},"headers":[{"level":3,"title":"Logstash 的主要功能","slug":"logstash-的主要功能","link":"#logstash-的主要功能","children":[]},{"level":3,"title":"Logstash 工作流程","slug":"logstash-工作流程","link":"#logstash-工作流程","children":[]},{"level":3,"title":"示例场景","slug":"示例场景","link":"#示例场景","children":[]},{"level":3,"title":"替代方案","slug":"替代方案","link":"#替代方案","children":[]},{"level":3,"title":"✅ 对应关系：Spring Data Elasticsearch 5.0.x → Elasticsearch 7.17.x","slug":"✅-对应关系-spring-data-elasticsearch-5-0-x-→-elasticsearch-7-17-x","link":"#✅-对应关系-spring-data-elasticsearch-5-0-x-→-elasticsearch-7-17-x","children":[]},{"level":3,"title":"🐳 Docker 镜像推荐","slug":"🐳-docker-镜像推荐","link":"#🐳-docker-镜像推荐","children":[]},{"level":3,"title":"🔗 版本对应表（Spring Data Elasticsearch → Elasticsearch）","slug":"🔗-版本对应表-spring-data-elasticsearch-→-elasticsearch","link":"#🔗-版本对应表-spring-data-elasticsearch-→-elasticsearch","children":[]},{"level":3,"title":"✅ 总结","slug":"✅-总结","link":"#✅-总结","children":[]},{"level":3,"title":"🛑 不要使用 Elasticsearch 8.x 的 Docker 镜像","slug":"🛑-不要使用-elasticsearch-8-x-的-docker-镜像","link":"#🛑-不要使用-elasticsearch-8-x-的-docker-镜像","children":[]},{"level":2,"title":"✅ 1. 什么是 Kibana？","slug":"✅-1-什么是-kibana","link":"#✅-1-什么是-kibana","children":[]},{"level":2,"title":"✅ 2. 安装 Kibana（Docker 方式，推荐）","slug":"✅-2-安装-kibana-docker-方式-推荐","link":"#✅-2-安装-kibana-docker-方式-推荐","children":[{"level":3,"title":"🐳 启动 Kibana 容器","slug":"🐳-启动-kibana-容器","link":"#🐳-启动-kibana-容器","children":[]}]},{"level":2,"title":"✅ 3. 访问 Kibana","slug":"✅-3-访问-kibana","link":"#✅-3-访问-kibana","children":[]},{"level":2,"title":"✅ 4. 常用功能入口","slug":"✅-4-常用功能入口","link":"#✅-4-常用功能入口","children":[]},{"level":2,"title":"✅ 5. 示例：在 Dev Tools 中测试 IDs 查询","slug":"✅-5-示例-在-dev-tools-中测试-ids-查询","link":"#✅-5-示例-在-dev-tools-中测试-ids-查询","children":[]},{"level":2,"title":"✅ 6. 与 Spring Data Elasticsearch 配合使用","slug":"✅-6-与-spring-data-elasticsearch-配合使用","link":"#✅-6-与-spring-data-elasticsearch-配合使用","children":[]},{"level":2,"title":"✅ 7. 注意事项","slug":"✅-7-注意事项","link":"#✅-7-注意事项","children":[]},{"level":2,"title":"✅ 8. 停止/删除容器","slug":"✅-8-停止-删除容器","link":"#✅-8-停止-删除容器","children":[{"level":3,"title":"✅ 简短回答：","slug":"✅-简短回答","link":"#✅-简短回答","children":[]}]},{"level":2,"title":"🧩 问题本质：容器网络隔离","slug":"🧩-问题本质-容器网络隔离","link":"#🧩-问题本质-容器网络隔离","children":[]},{"level":2,"title":"✅ 正确解决方案","slug":"✅-正确解决方案","link":"#✅-正确解决方案","children":[{"level":3,"title":"✅ 方案 1：使用 Docker 自定义网络（推荐 ✅）","slug":"✅-方案-1-使用-docker-自定义网络-推荐-✅","link":"#✅-方案-1-使用-docker-自定义网络-推荐-✅","children":[]},{"level":3,"title":"✅ 方案 2：使用 host.docker.internal（Windows/Mac 专用）","slug":"✅-方案-2-使用-host-docker-internal-windows-mac-专用","link":"#✅-方案-2-使用-host-docker-internal-windows-mac-专用","children":[]},{"level":3,"title":"❌ 方案 3：--network host（Windows 不支持）","slug":"❌-方案-3-network-host-windows-不支持","link":"#❌-方案-3-network-host-windows-不支持","children":[]}]},{"level":2,"title":"✅ 总结：Windows 上推荐做法","slug":"✅-总结-windows-上推荐做法","link":"#✅-总结-windows-上推荐做法","children":[]},{"level":2,"title":"✅ 验证方法","slug":"✅-验证方法","link":"#✅-验证方法","children":[]},{"level":2,"title":"✅ 最终建议","slug":"✅-最终建议","link":"#✅-最终建议","children":[]}],"git":{"createdTime":1755076413000,"updatedTime":1755076675000,"contributors":[{"name":"huangcheng","email":"2387020215@qq.com","commits":2}]},"filePathRelative":"blogs/工作/elk/elk window下docker部署.md"}');export{p as comp,o as data};
